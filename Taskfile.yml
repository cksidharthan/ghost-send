version: '3'

tasks:
  run:
    dir: backend
    desc: Run the application
    cmds:
      - go run main.go

  deps:
    dir: backend
    desc: Install dependencies
    cmds:
      - go mod download
      - go mod verify
      - go mod tidy
      - go mod vendor

  dev-setup:
    dir: backend
    desc: Setup the backend project
    cmds:
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - brew install sqlc
      - task: deps

  fmt:
    dir: backend
    desc: Format the backend code
    cmds:
      - go fmt ./...

  lint:
    dir: backend
    desc: Lint the backend code
    cmds:
      - golangci-lint run ./...
      - go vet ./...

  test:
    dir: backend
    desc: Run all tests
    cmds:
      - go test -v -cover ./...

  up:
    dir: backend
    desc: Start the backend server
    cmds:
      - go run main.go

  air:
    dir: backend
    desc: Start the backend server with air for hot reload
    cmds:
      - air

  sqlc:
    dir: backend
    desc: Generate the SQLC code
    cmds:
      - sqlc generate

  build-image:
    dir: deploy
    desc: Build the Docker image
    cmds:
      - docker build -t secret .

  run-image:
    dir: deploy
    desc: Run the Docker image
    cmds:
      - docker run -p 7780:7780 secret

  deploy:
    dir: deploy
    desc: Deploy the application
    cmds:
      - docker compose -f docker-compose.yaml up -d --build

  deploy-postgres:
    dir: deploy
    desc: Deploy the postgres database
    cmds:
      - docker compose -f docker-compose.yaml up -d postgres-secret

  down:
    dir: deploy
    desc: Down the application
    cmds:
      - docker compose -f docker-compose.yaml down
